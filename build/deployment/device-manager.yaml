apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeshare-device-manager
  namespace: kube-system

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubeshare-device-manager
rules:
- apiGroups: [""]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["sharedgpu.goc"]
  resources: ["*"]
  verbs: ["*"]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubeshare-device-manager
subjects:
- kind: ServiceAccount
  name: kubeshare-device-manager
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: kubeshare-device-manager
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: v1
kind: Service
metadata:
  name: kubeshare-device-manager
  namespace: kube-system
spec:
  type: ClusterIP
  selector:
    app: kubeshare-device-manager
  ports:
  - name: controller
    port: 9797
    targetPort: 9797

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubeshare-device-manager
  namespace: kube-system
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ""
  labels:
    app: kubeshare-device-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubeshare-device-manager
  template:
    metadata:
      labels:
        app: kubeshare-device-manager
    spec:    
      serviceAccountName: kubeshare-device-manager
      priorityClassName: system-node-critical
      tolerations:
      - key: "CriticalAddonsOnly"
        operator: "Exists"
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
        effect: "NoSchedule"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "node-role.kubernetes.io/master"
                operator: "Exists"
      restartPolicy: Always
      containers:
      - name: kubeshare-device-manager
        image: riyazhu/kubeshare-device-manager:develop

---

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kubeshare-node-daemon
  namespace: kube-system
  labels:
    kubeshare: kubeshare-node-daemon
spec:
  selector:
    matchLabels:
      kubeshare: kubeshare-node-daemon
  template:
    metadata:
      labels:
        kubeshare: kubeshare-node-daemon
    spec:
      nodeSelector:
        SharedGPU: "true"
      terminationGracePeriodSeconds: 0
      restartPolicy: Always
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      initContainers:
      - name: gemini-hook-init
        image: riyazhu/kubeshare-gemini-hook-init #ncy9371/kubeshare-gemini-hook-init:20200429135835
        volumeMounts:
        - name: "kubeshare-library"
          mountPath: /kubeshare/library  
        - name: "exporter"
          mountPath: /tmp
      containers:
      - name: config-client
        image: riyazhu/kubeshare-config-client:develop
        env:
        - name: KUBESHARE_SCHEDULER_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: "kubeshare-scheduler"
          mountPath: "/kubeshare/scheduler"
        - name: "kubeshare-library"
          mountPath: "/kubeshare/library"
        - name: "exporter"
          mountPath: "/tmp"
      - name: gemini-scheduler
        image: riyazhu/kubeshare-gemini-scheduler #ncy9371/kubeshare-gemini-scheduler:20200429135835
        volumeMounts:
        - name: "kubeshare-scheduler"
          mountPath: "/kubeshare/scheduler"
        - name: "kubeshare-library"
          mountPath: "/kubeshare/library"
        volumeMounts:
        - name: "kubeshare-scheduler"
          mountPath: "/kubeshare/scheduler"
        - name: "exporter"
          mountPath: /tmp
      volumes:
      - name: "kubeshare-scheduler"
        hostPath:
          path: "/kubeshare/scheduler"
      - name: "kubeshare-library"
        hostPath:
          path: "/kubeshare/library"
      - name: "exporter"
        hostPath:
          path: "/tmp"

