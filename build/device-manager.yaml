apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeshare-device-manager
  namespace: kube-system

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubeshare-device-manager
rules:
- apiGroups: [""]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["sharedgpu.goc"]
  resources: ["*"]
  verbs: ["*"]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubeshare-device-manager
subjects:
- kind: ServiceAccount
  name: kubeshare-device-manager
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: kubeshare-device-manager
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: v1
kind: Service
metadata:
  name: kubeshare-device-manager
  namespace: kube-system
spec:
  type: ClusterIP
  selector:
    app: kubeshare-device-manager
  ports:
  - name: controller
    port: 9797
    targetPort: 9797

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubeshare-device-manager
  namespace: kube-system
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ""
  labels:
    app: kubeshare-device-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubeshare-device-manager
  template:
    metadata:
      labels:
        app: kubeshare-device-manager
    spec:    
      serviceAccountName: kubeshare-device-manager
      priorityClassName: system-node-critical
      tolerations:
      - key: "CriticalAddonsOnly"
        operator: "Exists"
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
        effect: "NoSchedule"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "node-role.kubernetes.io/master"
                operator: "Exists"
      restartPolicy: Always
      containers:
      - name: kubeshare-device-manager
        image: riyazhu/kubeshare-device-manager:debug

---

